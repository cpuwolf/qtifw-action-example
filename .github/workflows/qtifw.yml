name: qtifw

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]


jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [macos-13, windows-latest, ubuntu-22.04]

    steps:
    - uses: actions/checkout@v4.0.0 

    - uses: jmarrec/setup-qtifw@v1.3.1
      with:
        qtifw-version: '4.8.1' # Version range or exact version of a QtIFW version to use, using SemVer's version range syntax
    - run: binarycreator --offline-only -c config/config.xml -p packages installer

    - name: macos dependency
      shell: sh
      continue-on-error: true
      run: |
        zip -9 -y -r -q installer.zip installer.app
      if: startsWith(matrix.os,'macos')

    - name: Upload build
      uses: actions/upload-artifact@v4
      with:
        name: buildoutput-${{ matrix.os }}
        path: ${{github.workspace}}/

  jbrelease:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Set enviroment for release
      run: |
        echo "RELEASE_TAG=v1.0.0" >> $GITHUB_ENV
        echo "RELEASE_NAME=$GITHUB_WORKFLOW" >> $GITHUB_ENV

    - name: Download artifact
      uses: actions/download-artifact@v4
      with:
          pattern: buildoutput-*
          merge-multiple: true          

    - name: Upload to Release
      uses: meeDamian/github-release@2.0
      with:
        tag: ${{ env.RELEASE_TAG }}
        draft: true
        allow_override: true
        gzip: folders
        token: ${{ secrets.GITHUB_TOKEN }}
        files: >
          installer
          installer.zip
          installer.exe



